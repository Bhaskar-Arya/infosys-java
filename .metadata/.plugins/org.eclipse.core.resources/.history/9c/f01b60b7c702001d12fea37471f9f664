package com.infy.utility;

import org.apache.commons.logging.Log;
import org.springframework.http.HttpStatus;
import org.apache.commons.logging.LogFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.infy.exception.InfyCourierException;
import com.infy.utility.ErrorInfo;



@RestControllerAdvice
public class ExceptionControllerAdvice {
	
	 private static final Log LOGGER = LogFactory.getLog(ExceptionControllerAdvice.class);


	@Autowired
	private Environment environment;
	
	@ExceptionHandler(Exception.class)
	public ResponseEntity<ErrorInfo> exceptionHandler(Exception exception,HttpStatus req) {
		ErrorInfo erinfo = new ErrorInfo();
		erinfo.setErrorCode(HttpStatus.INTERNAL_SERVER_ERROR.value());
		erinfo.setErrorMessage(environment.getProperty("General.EXCEPTION_MESSAGE"));
		LOGGER.error(erinfo);
		return new ResponseEntity<ErrorInfo>(erinfo,HttpStatus.INTERNAL_SERVER_ERROR);
	}
	
	
	@ExceptionHandler(InfyCourierException.class)
	public ResponseEntity<ErrorInfo> infyCourierExceptionHandler(InfyCourierException exception) {
		ErrorInfo errorInfo = new ErrorInfo();
		errorInfo.setErrorCode(HttpStatus.BAD_REQUEST.value());
		errorInfo.setErrorMessage(environment.getProperty("Service.NO_RECORDS_FOUND"));
		LOGGER.error(errorInfo);

		return new ResponseEntity<ErrorInfo>(errorInfo,HttpStatus.BAD_REQUEST);
	}	
		


}
